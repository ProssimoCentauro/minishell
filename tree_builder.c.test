#include "minishell.h"


static	void	handle_cmd(t_token **tokens, t_token **root, t_token **last, size_t *i)
{
	if (*root == NULL)
		*root = tokens[i];
	else if (i > 0 && tokens[i - 1]->type != CMD)
		*root->right = tokens[i];
	*last = 
	//arguments skip to add
}

static	void	handle_delimiter(t_token **tokens, t_token **root, size_t *i)
{
	t_token *temp;

	temp = *root;
	*root = tokens[i];
	*root->left = temp;
}

t_token	*build_tree(t_token **tokens, size_t i)
{
	t_token	*root;
	t_token	*temp;
	t_token	*last;

	root = NULL;
	while (tokens[i])
	{
		if (tokens[i]->type == CMD)
			handle_cmd(tokens, &root, &i);
		else if (tokens[i]->type & (DELIMITER))
			handle_delimiter(tokens, &root, &i);
		else if (tokens[i]->subtype & (PIPE))
		{

		}
	}
}
